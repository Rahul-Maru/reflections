What happens when you initialize a repository? Why do you need to do it?

    A repository get created with no commits. So when you commit one file, all the others get commited as well

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    It allows you to add some files to the commit but not necessarily all of them

How can you use the staging area to make sure you have one commit per logical
change?

    You only need to commit 1 or two files at a time, allowing you to break up the files into 1 commit per logical change

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

    If you want to try something comletely new & crazy (crazier than amma) but you still want to continue working on the original files

How do the diagrams help you visualize the branch structure?

    You can use graphs to see what commits are in which branches

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

    Git combines the two files by comparing them with the commit where the branches split

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

    Merging manually takes a ton of time and mistakes can happen very often. 
    Merging automaticaly Can result in code not working or merging properly even without there being a conflict
